PYTHON      = python
MCU         = atmega32u4
CFLAGS      = -std=c99 -g -Werror -Wall -Wextra -Wno-unused-parameter
AVR_CFLAGS  = -mmcu=$(MCU) -Os -DF_CPU=8000000ul -flto
HOST_CFLAGS = -fpic `$(PYTHON) get_python_cflags.py`

!cc_avr     = |> ^ CC %o^    avr-gcc $(CFLAGS) $(AVR_CFLAGS)                         -c %f -o %o |>
!ld_avr     = |> ^ LD %o^    avr-gcc $(CFLAGS) $(AVR_CFLAGS) -Wl,--cref -Wl,-Map=%O.map %f -o %o |> | %O.map
!ar_avr     = |> ^ AR %o^    avr-gcc-ar crs %o %f                        |>
!dis_avr    = |> ^ DIS %o^   avr-objdump -d %f > %o                      |>
!hex_avr    = |> ^ HEX %o^   avr-objcopy -j .text -j .data -O ihex %f %o |>
!size_avr   = |> ^ SIZE %o^  avr-size -C --mcu=$(MCU) %f > %o            |>
!check_avr  = |> ^ CHECK %o^ ./check_assembly.sh %f > %o                 |>

!cc_host          = |> ^ CC %o^    gcc $(CFLAGS) $(HOST_CFLAGS)            -c      %f -o %o |>
!cc_host_coverage = |> ^ CC %o^    gcc $(CFLAGS) $(HOST_CFLAGS) --coverage -c      %f -o %o |> | %O.gcno
!so_host          = |> ^ SO %o^    gcc $(CFLAGS) $(HOST_CFLAGS) --coverage -shared %f -o %o |>

!preproc = |> ^ CPP %o^ gcc -undef -nostdinc -I dummy_stdlib -P -dN -E %f -o %o |>



common_sources =  datetime.c sha1.c hmac_sha1.c hotp.c
common_sources += inverter.c spi_bitbang.c as1107.c



avr_sources = pin_avr.c demo_avr.c

: foreach $(common_sources) $(avr_sources) |> !cc_avr |> %B.avr.o  {avr_objects}

: {avr_objects} |> !ld_avr |> demo.avr.elf {avr_binaries}

: foreach {avr_binaries}      |> !dis_avr   |> %B.s {avr_disassemblies}
: foreach {avr_binaries}      |> !hex_avr   |> %B.hex
: foreach {avr_binaries}      |> !size_avr  |> %B_size.txt
: foreach {avr_disassemblies} |> !check_avr |> %B_check.txt



cffi_sources = pure_cffi.c inverter_cffi.c spi_bitbang_cffi.c
cffi_headers = pure_cffi.h inverter.h spi_bitbang.h

: foreach $(cffi_headers) |> !preproc |> %B.i

: pure_cffi.h pure_cffi.i |> ^ CFFI %o^ $(PYTHON) gen_cffi.py -m pure_cffi -f %1f -i %2f -o %o |> pure_cffi.c
: inverter.h inverter.i callbacks.txt |> ^ CFFI %o^ $(PYTHON) gen_cffi.py -m inverter_cffi -f %1f -i %2f -c %3f -o %o |> inverter_cffi.c
: spi_bitbang.h spi_bitbang.i callbacks.txt |> ^ CFFI %o^ $(PYTHON) gen_cffi.py -m spi_bitbang_cffi -f %1f -i %2f -c %3f -o %o |> spi_bitbang_cffi.c

: foreach $(common_sources) |> !cc_host_coverage |> %B.host.o
: foreach $(cffi_sources)   |> !cc_host          |> %B.host.o

: pure_cffi.host.o datetime.host.o sha1.host.o hmac_sha1.host.o hotp.host.o |> !so_host |> pure_cffi.so

: inverter_cffi.host.o    inverter.host.o    |> !so_host |> inverter_cffi.so
: spi_bitbang_cffi.host.o spi_bitbang.host.o |> !so_host |> spi_bitbang_cffi.so
